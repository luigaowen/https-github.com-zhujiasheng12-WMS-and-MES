using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace WebApplication2.Kanban.工程中心Method
{
    /// <summary>
    /// 生产订单编程任务 的摘要说明
    /// </summary>
    public class 生产订单编程任务 : IHttpHandler
    {

        public void ProcessRequest(HttpContext context)
        {

            List<ProduceOrderProgramTasks> orderInfos = new List<ProduceOrderProgramTasks>();
            try
            {

                using (JDJS_WMS_DB_USEREntities wms = new JDJS_WMS_DB_USEREntities())
                {

                   

                    var orders = wms.JDJS_WMS_Order_Entry_Table.Where(r => r.Engine_Program_ManagerId != null && r.Intention == 3);
                    foreach (var order in orders)
                    {
                        int orderID = order.Order_ID;


                        var processing = wms.JDJS_WMS_Order_Process_Info_Table.Where(r => r.OrderID == orderID && r.sign != 0 && r.ProgramePassTime ==null);
                        if (processing.Count() > 0)
                        {
                            ProduceOrderProgramTasks orderInfo = new ProduceOrderProgramTasks();
                            orderInfo.createTime = Convert.ToDateTime(order.CreateTime);
                            orderInfo.orderLeader = order.Order_Leader;
                            orderInfo.orderName = order.Product_Name;
                            orderInfo.orderNum = order.Order_Number;
                            orderInfo.orderNumber = order.Product_Output;
                            orderInfo.priority = order.Priority == null ? 1 : Convert.ToInt32(order.Priority);
                            orderInfo.projectName = order.ProjectName;
                            orderInfo.ProgramPerson = "";
                            if (order.Engine_Program_ManagerId != null)
                            {
                                var staff = wms.JDJS_WMS_Staff_Info.Where(r => r.id == order.Engine_Program_ManagerId).FirstOrDefault();
                                if (staff != null)
                                {
                                    orderInfo.ProgramPerson = staff.staff;
                                }
                            }

                            orderInfos.Add(orderInfo);
                            continue;
                        }
                        orderInfos = orderInfos.OrderByDescending(r => r.priority).ThenBy(r => r.createTime).ToList(); 
                        var processing1 = wms.JDJS_WMS_Order_Process_Info_Table.Where(r => r.OrderID == orderID && r.sign != 0 && r.ProgramePassTime != null);
                        if(processing1 .Count ()>0&&Convert .ToDateTime ( processing1 .First ().ProgramePassTime)>DateTime .Now .AddDays (-7) )
                        {
                            ProduceOrderProgramTasks orderInfo = new ProduceOrderProgramTasks();
                            orderInfo.createTime = Convert.ToDateTime(order.CreateTime);
                            orderInfo.orderLeader = order.Order_Leader;
                            orderInfo.orderName = order.Product_Name;
                            orderInfo.orderNum = order.Order_Number;
                            orderInfo.orderNumber = order.Product_Output;
                            orderInfo.priority = order.Priority == null ? 1 : Convert.ToInt32(order.Priority);
                            orderInfo.projectName = order.ProjectName;
                            orderInfo.ProgramPerson = "";
                            if (order.Engine_Program_ManagerId != null)
                            {
                                var staff = wms.JDJS_WMS_Staff_Info.Where(r => r.id == order.Engine_Program_ManagerId).FirstOrDefault();
                                if (staff != null)
                                {
                                    orderInfo.ProgramPerson = staff.staff;
                                }
                            }

                            orderInfos.Add(orderInfo);
                            continue;
                        }
                        if (processing1.Count() < 1 && processing.Count() < 1)
                        {
                            ProduceOrderProgramTasks orderInfo = new ProduceOrderProgramTasks();
                            orderInfo.createTime = Convert.ToDateTime(order.CreateTime);
                            orderInfo.orderLeader = order.Order_Leader;
                            orderInfo.orderName = order.Product_Name;
                            orderInfo.orderNum = order.Order_Number;
                            orderInfo.orderNumber = order.Product_Output;
                            orderInfo.priority = order.Priority == null ? 1 : Convert.ToInt32(order.Priority);
                            orderInfo.projectName = order.ProjectName;
                            orderInfo.ProgramPerson = "";
                            if (order.Engine_Program_ManagerId != null)
                            {
                                var staff = wms.JDJS_WMS_Staff_Info.Where(r => r.id == order.Engine_Program_ManagerId).FirstOrDefault();
                                if (staff != null)
                                {
                                    orderInfo.ProgramPerson = staff.staff;
                                }
                            }

                            orderInfos.Add(orderInfo);
                            continue;
                        }
                    }
                    
                    var  noorders = wms.JDJS_WMS_Order_Entry_Table.Where(r => r.Engine_Program_ManagerId == null && r.Intention == 3);
                    foreach (var order in noorders)
                    {
                        int orderID = order.Order_ID;
   
                        {
                            ProduceOrderProgramTasks orderInfo = new ProduceOrderProgramTasks();
                            orderInfo.createTime = Convert.ToDateTime(order.CreateTime);
                            orderInfo.orderLeader = order.Order_Leader;
                            orderInfo.orderName = order.Product_Name;
                            orderInfo.orderNum = order.Order_Number;
                            orderInfo.orderNumber = order.Product_Output;
                            orderInfo.priority = order.Priority == null ? 1 : Convert.ToInt32(order.Priority);
                            orderInfo.projectName = order.ProjectName;
                            orderInfo.ProgramPerson = "";
                            

                            orderInfos.Insert (0,orderInfo);
                        }
                    }
                }
                
                System.Web.Script.Serialization.JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
                var json = serializer.Serialize(orderInfos);
                context.Response.Write("data:"+json+"\n\n");
                context.Response.ContentType = "text/event-stream";
            }
            catch (Exception ex)
            {
                context.Response.Write(ex.Message );
            }
        }

        public bool IsReusable
        {
            get
            {
                return false;
            }
        }
    }
    public struct ProduceOrderProgramTasks
    {
        /// <summary>
        /// 订单号
        /// </summary>
        public string orderNum;
        /// <summary>
        /// 项目名
        /// </summary>
        public string projectName;
        /// <summary>
        /// 产品名称
        /// </summary>
        public string orderName;
        /// <summary>
        /// 订单负责人
        /// </summary>
        public string orderLeader;
        /// <summary>
        /// 编程负责人
        /// </summary>
        public string ProgramPerson;
        /// <summary>
        /// 优先级
        /// </summary>
        public int priority;
        /// <summary>
        /// 订单数量
        /// </summary>
        public int orderNumber;
        /// <summary>
        /// 创建时间
        /// </summary>
        public DateTime createTime;
    }
}