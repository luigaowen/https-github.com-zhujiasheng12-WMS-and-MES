using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.SessionState;

namespace WebApplication2.Model.生产管理.市场部
{
    /// <summary>
    /// create 的摘要说明
    /// </summary>
    public class create : IHttpHandler, IRequiresSessionState
    {


        public void ProcessRequest(HttpContext context)
        {

            var form = context.Request.Form;
            var file = context.Request.Files;
            var projectName = form["projectName"];
        
            var loginID = Convert.ToInt32(context.Session["id"]);
            int priority = 1;//优先级
            string year = DateTime.Now.Year.ToString().Substring(2, 2);
            string month = DateTime.Now.Month.ToString();
            while (month.Length < 2)
            {
                month = month.Insert(0, "0");
            }
            string day = DateTime.Now.Day.ToString();
            while (day.Length < 2)
            {
                day = day.Insert(0, "0");
            }
            string strOrderNum = year + month + day;
            int flag = 1;
            string flagStr = "";
            // var folder = @"D:\服务器文件勿动\" + form[0];
            using (JDJS_WMS_DB_USEREntities entities = new JDJS_WMS_DB_USEREntities())
            {
                using (System.Data.Entity.DbContextTransaction date = entities.Database.BeginTransaction())
                {

                    try
                    {
                        while (true)
                        {
                           flagStr = flag.ToString();
                            while (flagStr.Length < 5)
                            {
                                flagStr = flagStr.Insert(0, "0");
                            }

                            var order = entities.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == strOrderNum + flagStr);
                            if (order.Count() < 1)
                            {
                                break;
                            }
                            flag++;
                        }
                        if (form[0] == "0")
                        {



                            var Order_Number = strOrderNum + flagStr;
                            var Order_Leader = form[2];
                            var Product_Name = form[3];
                            var Product_Material = form[4];
                            var Product_Output = int.Parse(form[5]);
                            var Order_Plan_End_Time = DateTime.Parse(form[6]);
                            var Order_State = form[7];
                            var Order_Plan_Start_Time = DateTime.Now;
                            var Customer = form[8];
                            var pattern = int.Parse(form["pattern"]);


                            var judge = entities.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == Order_Number);
                            if (judge.Count() > 0)
                            {
                                context.Response.Write("该订单已存在");
                                return;
                            }
                            var row = new JDJS_WMS_Order_Entry_Table
                            {
                                Order_Number = Order_Number,
                                Order_Leader = Order_Leader,
                                Product_Name = Product_Name,
                                Product_Material = Product_Material,
                                Product_Output = Product_Output,
                                Order_Plan_End_Time = Order_Plan_End_Time,
                                Order_State = Order_State,
                                Order_Plan_Start_Time = DateTime.Now,
                                Intention = 3,
                                ProjectName = projectName,
                                ProofingORProduct = pattern,
                                CtratPersonID = loginID,
                                Priority = priority,
                                CreateTime = DateTime.Now,
                                CreatePersonID = loginID,
                                audit_Result ="待审核"
                                
                            };
                            entities.JDJS_WMS_Order_Entry_Table.Add(row);
                            entities.SaveChanges();
                            var orderId = entities.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == Order_Number).FirstOrDefault().Order_ID;
                            JDJS_WMS_Order_Guide_Schedu_Table guide = new JDJS_WMS_Order_Guide_Schedu_Table()
                            {
                                OrderID = orderId,
                                ClientName = Customer
                            };
                            entities.JDJS_WMS_Order_Guide_Schedu_Table.Add(guide);
                            entities.SaveChanges();
                            var queue = new JDJS_WMS_Order_Queue_Table { OrderID = orderId, isFlag = 3 };
                            entities.JDJS_WMS_Order_Queue_Table.Add(queue);
                            entities.SaveChanges();
                            PathInfo pathInfo = new PathInfo();
                            var folder = Path.Combine(pathInfo.upLoadPath(), Order_Number, form[1], @"客供图纸");
                            if (!Directory.Exists(folder))
                            {
                                Directory.CreateDirectory(folder);
                            };

                            for (int i = 0; i < file.Count; i++)
                            {
                                var name = file[i].FileName;
                                var size = file[i].ContentLength;
                                string path = Path.Combine(folder, name);
                                file[i].SaveAs(path);

                            }
                            entities.SaveChanges();
                            context.Response.Write("ok");
                            date.Commit();

                        }
                        else
                        {
                            var Order_Number = strOrderNum +flagStr;
                            var Order_Leader = form[2];
                            var oldOrderNumber = form[3];
                            var Product_Name = form[4];
                            var Product_Material = form[5];
                            var Product_Output = int.Parse(form[6]);
                            var Order_Plan_End_Time = DateTime.Parse(form[7]);
                            var Order_State = form[8];
                            var Order_Plan_Start_Time = DateTime.Now;
                            var Customer = form[9];


                            {

                                string OrderNum = Order_Number;
                                string OrderOwener = Order_Leader;
                                string OldOrderNum = oldOrderNumber;
                                string ProductName = Product_Name;
                                string ProductMertial = Product_Material;
                                int ProductOutPut = Product_Output;
                                string OrderState = Order_State;
                                DateTime OverTime = DateTime.Now;
                                using (JDJS_WMS_DB_USEREntities wms = new JDJS_WMS_DB_USEREntities())
                                {
                                    var orders = wms.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == OrderNum);
                                    if (orders.Count() > 0)
                                    {
                                        Console.WriteLine("该订单号已存在");
                                        return;
                                    }
                                    else
                                    {
                                        using (System.Data.Entity.DbContextTransaction mytran = wms.Database.BeginTransaction())
                                        {
                                            try
                                            {


                                                var OldOrderInfo = wms.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == OldOrderNum);
                                                if (OldOrderInfo.Count() > 0)
                                                {
                                                    JDJS_WMS_Order_Entry_Table orderentry = new JDJS_WMS_Order_Entry_Table()
                                                    {
                                                        Order_Number = OrderNum,
                                                        Order_Leader = OrderOwener,
                                                        Product_Name = ProductName,
                                                        Product_Material = ProductMertial,
                                                        Product_Output = ProductOutPut,
                                                        Order_Plan_Start_Time = null,
                                                        Order_Actual_Start_Time = null,
                                                        Order_Actual_End_Time = null,
                                                        Order_Plan_End_Time = OverTime,
                                                        Engine_Program_Manager = OldOrderInfo.FirstOrDefault().Engine_Program_Manager,
                                                        Engine_Technology_Manager = OldOrderInfo.FirstOrDefault().Engine_Technology_Manager,
                                                        Engine_Program_ManagerId = OldOrderInfo.FirstOrDefault().Engine_Program_ManagerId,
                                                        Engine_Technology_ManagerId = OldOrderInfo.FirstOrDefault().Engine_Technology_ManagerId,
                                                        Engine_Status = "未进行",
                                                        Intention = 3,
                                                        ProjectName = projectName,
                                                        CreateTime = DateTime.Now,
                                                        CreatePersonID = loginID,
                                                        Order_State = OrderState,
                                                        virtualProgPersId = OldOrderInfo.FirstOrDefault().virtualProgPersId,
                                                        virtualReturnTime = OldOrderInfo.FirstOrDefault().virtualReturnTime
                                                        audit_Result = "待审核"
                                                    };
                                                    wms.JDJS_WMS_Order_Entry_Table.Add(orderentry);
                                                    wms.SaveChanges();
                                                    mytran.Commit();
                                                }
                                            }
                                            catch (Exception ex)
                                            {
                                                mytran.Rollback();
                                                context.Response.Write(ex.Message);
                                                return;
                                            }
                                        }

                                        using (System.Data.Entity.DbContextTransaction mytran = wms.Database.BeginTransaction())
                                        {
                                            try
                                            {
                                                var newOlder = wms.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == OrderNum).FirstOrDefault();
                                                JDJS_WMS_Order_Blank_Table blank = new JDJS_WMS_Order_Blank_Table()
                                                {
                                                    OrderID = newOlder.Order_ID,
                                                    BlackNumber = newOlder.Product_Output,
                                                    BlankAddition = 0,
                                                    BlankSpecification = null,
                                                    BlankState = null,
                                                    BlanktotalPreparedNumber = 0,
                                                    BlankType = null,

                                                };
                                                wms.JDJS_WMS_Order_Blank_Table.Add(blank);
                                                wms.SaveChanges();

                                                JDJS_WMS_Order_Guide_Schedu_Table guide = new JDJS_WMS_Order_Guide_Schedu_Table()
                                                {
                                                    OrderID = newOlder.Order_ID,
                                                    ClientName = Customer
                                                };
                                                entities.JDJS_WMS_Order_Guide_Schedu_Table.Add(guide);
                                                entities.SaveChanges();

                                                var oldOlder = wms.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == OldOrderNum).FirstOrDefault();
                                                var oldProcessInfo = wms.JDJS_WMS_Order_Process_Info_Table.Where(r => r.OrderID == oldOlder.Order_ID && r.sign == 1);
                                                foreach (var item in oldProcessInfo)
                                                {
                                                    string oldprocessName = item.programName;
                                                    string[] str = oldprocessName.Split('-');
                                                    string NewProcessNum = "";
                                                    if (str.Length == 2)
                                                    {
                                                        NewProcessNum = OrderNum + "-" + str[1];
                                                    }
                                                    string oldToolName = item.toolChartName;
                                                    string[] toolStr = oldToolName.Split('-');
                                                    string NewToolNum = "";
                                                    if (toolStr.Length == 3)
                                                    {
                                                        NewToolNum = "T" + "-" + OrderNum + "-" + toolStr[2];
                                                    }

                                                    JDJS_WMS_Order_Process_Info_Table process = new JDJS_WMS_Order_Process_Info_Table()
                                                    {
                                                        OrderID = newOlder.Order_ID,
                                                        ProcessID = item.ProcessID,
                                                        BlankNumber = ProductOutPut,
                                                        BlankSpecification = item.BlankSpecification,
                                                        BlankType = item.BlankType,
                                                        DeviceType = item.DeviceType,
                                                        JigSpecification = item.JigSpecification,
                                                        ProcessTime = item.ProcessTime,
                                                        programName = NewProcessNum,
                                                        sign = item.sign,
                                                        toolChartName = NewToolNum,
                                                        toolPreparation = item.toolPreparation,
                                                    };
                                                    wms.JDJS_WMS_Order_Process_Info_Table.Add(process);
                                                }
                                                wms.SaveChanges();
                                                mytran.Commit();


                                            }
                                            catch (Exception ex)
                                            {
                                                mytran.Rollback();
                                                context.Response.Write(ex.Message);
                                                return;
                                            }
                                        }


                                        using (System.Data.Entity.DbContextTransaction mytran = wms.Database.BeginTransaction())
                                        {
                                            try
                                            {
                                                var newOlder = wms.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == OrderNum).FirstOrDefault();
                                                var processes = wms.JDJS_WMS_Order_Process_Info_Table.Where(r => r.OrderID == newOlder.Order_ID && r.sign == 1);
                                                foreach (var item in processes)
                                                {
                                                    JDJS_WMS_Order_Fixture_Manager_Table fix = new JDJS_WMS_Order_Fixture_Manager_Table()
                                                    {
                                                        ProcessID = item.ID,
                                                        FixtureAdditionNumber = 0,
                                                        FixtureNumber = 0,
                                                        FixtureFinishPerpareNumber = 0,

                                                    };
                                                    wms.JDJS_WMS_Order_Fixture_Manager_Table.Add(fix);
                                                }
                                                //给每个工序添加治具一行
                                                wms.SaveChanges();
                                                mytran.Commit();


                                            }
                                            catch (Exception ex)
                                            {
                                                mytran.Rollback();
                                                context.Response.Write(ex.Message);
                                                return;
                                            }
                                        }

                                        using (System.Data.Entity.DbContextTransaction mytran = wms.Database.BeginTransaction())
                                        {
                                            try
                                            {
                                                var newOlder = wms.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == OrderNum).FirstOrDefault();
                                                var oldOlder = wms.JDJS_WMS_Order_Entry_Table.Where(r => r.Order_Number == OldOrderNum).FirstOrDefault();
                                                var processes = wms.JDJS_WMS_Order_Process_Info_Table.Where(r => r.OrderID == newOlder.Order_ID && r.sign == 1);
                                                foreach (var item in processes)
                                                {
                                                    var oldProcess = wms.JDJS_WMS_Order_Process_Info_Table.Where(r => r.OrderID == oldOlder.Order_ID && r.ProcessID == item.ProcessID && r.sign == 1).FirstOrDefault();
                                                    var OldTool = wms.JDJS_WMS_Order_Process_Tool_Info_Table.Where(r => r.ProcessID == oldProcess.ID);
                                                    foreach (var real in OldTool)
                                                    {
                                                        JDJS_WMS_Order_Process_Tool_Info_Table tool = new JDJS_WMS_Order_Process_Tool_Info_Table()
                                                        {
                                                            ProcessID = item.ID,
                                                            PathName = real.PathName,
                                                            Shank = real.Shank,
                                                            ToolAroidance = real.ToolAroidance,
                                                            ToolDiameter = real.ToolDiameter,
                                                            ToolLength = real.ToolLength,
                                                            ToolName = real.ToolName,
                                                            ToolNO = real.ToolNO
                                                        };
                                                        wms.JDJS_WMS_Order_Process_Tool_Info_Table.Add(tool);
                                                    }
                                                    wms.SaveChanges();
                                                }
                                                wms.SaveChanges();
                                                mytran.Commit();


                                            }
                                            catch (Exception ex)
                                            {
                                                mytran.Rollback();
                                                context.Response.Write(ex.Message);
                                                return;
                                            }
                                        }

                                        {
                                            PathInfo pathInfo = new PathInfo();
                                            var NewFolder = Path.Combine(pathInfo.upLoadPath(), OrderNum);
                                            var OldFolder = Path.Combine(pathInfo.upLoadPath(), OldOrderNum);


                                            List<string> srcPath = new List<string>();

                                            string[] src = Directory.GetFileSystemEntries(OldFolder);
                                            foreach (var item in src)
                                            {
                                                copyDir(item, NewFolder, OrderNum);
                                            }

                                            context.Response.Write("ok");
                                            return;
                                        }
                                    }


                                }

                            }

                        }
                    }
                    catch (Exception ex)
                    {
                        date.Rollback();
                        context.Response.Write(ex.Message);
                    }
                }


            }
        }
        /// <summary>
        /// 复制文件夹
        /// </summary>
        /// <param name="srcPath">源路径</param>
        /// <param name="aimPath">目标路径</param>
        /// <returns></returns>
        public static bool copyDir(string srcPath, string aimPath, string NewOrderNum)
        {
            try
            {
                if (Directory.Exists(aimPath))
                {
                    Directory.CreateDirectory(aimPath);
                }
                //目标路径
                string srcdir = Path.Combine(aimPath, Path.GetFileName(srcPath));
                if (Directory.Exists(srcPath))
                {
                    DirectoryInfo di = new DirectoryInfo(srcPath);

                    //srcdir = Path.Combine(srcdir, di.Name);
                }
                if (!Directory.Exists(srcdir))
                {
                    Directory.CreateDirectory(srcdir);
                }
                string[] files = Directory.GetFileSystemEntries(srcPath);
                foreach (var element in files)
                {
                    if (Directory.Exists(element))
                    {
                        copyDir(element, srcdir, NewOrderNum);
                    }
                    else
                    {
                        string str = Path.GetFileName(element);
                        if (str.Contains("-P"))
                        {
                            string[] strs = str.Split('-');
                            if (strs.Length == 2)
                            {
                                str = NewOrderNum + "-" + strs[1];
                                File.Copy(element, srcdir + @"\" + str, true);
                            }
                            else if (strs.Length == 3)
                            {
                                str = "T" + "-" + NewOrderNum + "-" + strs[2];
                                File.Copy(element, srcdir + @"\" + str, true);
                            }
                        }
                        else
                        {
                            File.Copy(element, srcdir + @"\" + Path.GetFileName(element), true);
                        }
                    }
                }
                return true;
            }
            catch
            {
                return false;
            }
        }

        public bool IsReusable
        {
            get
            {
                return false;
            }
        }
    }


}